{"version":3,"sources":["serviceWorker.js","Header.jsx","Footer.jsx","Login.jsx","util.js","Home.jsx","Monster.jsx","Monsters.jsx","MonsterOverlay.jsx","App.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","Header","props","className","src","alt","loggedIn","username","onClick","logout","Footer","href","target","rel","Login","state","password","saveUsername","register","switch","bind","handleUsernameChange","handlePasswordChange","handleSaveUsername","handleSubmit","localStorage","getItem","this","setState","setItem","event","value","name","checked","preventDefault","login","onSubmit","TextField","variant","margin","fullWidth","required","label","onChange","autoFocus","type","Button","React","Component","getRequest","root","params","notify","a","fetch","getRequestUrl","credentials","response","json","statusCode","console","log","Object","keys","map","key","join","getMonsterSrc","monster","id","Home","codes","clipboardCodes","copySuccess","handleChange","handleClipBoardChange","copyCodes","submitCodes","codesRef","select","document","execCommand","focus","ref","monsters","code","readOnly","codesLog","length","dailyMonster","Monster","hovering","top","left","onMouseEnter","onMouseMove","onMouseLeave","clientY","clientX","style","Monsters","menuStatus","openMenu","closeMenu","openMonsterOverlay","MonsterOverlay","display","closeMonsterOverlay","App","userId","created","selectedMonsters","loading","notifications","setUserInfo","startLoading","stopLoading","timer","setInterval","i","time","splice","user","push","redeemed","pop","message","duration","notification","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.57af5f0b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header>\r\n      <div className=\"menu-bar\">\r\n        <div className=\"title\">\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/titlelogo.png\"}\r\n            className=\"header-logo\"\r\n            alt={process.env.PUBLIC_URL + \"/titlelogo.png\"}\r\n          />\r\n        </div>\r\n        {props.loggedIn ? (\r\n          <div className=\"account\">\r\n            <p className=\"username\">{props.username}</p>\r\n            <button className=\"logout-button\" onClick={props.logout}>\r\n              Log Out\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"footer-note\">\r\n        <p>\r\n          To see the code for this website, give suggestions, or get help,\r\n          visit:{\" \"}\r\n          <a\r\n            href=\"https://github.com/lukeren314/poke-gans\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            https://github.com/lukeren314/poke-gans\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      saveUsername: false,\r\n      register: false,\r\n    };\r\n    this.switch = this.switch.bind(this);\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleSaveUsername = this.handleSaveUsername.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.loginRef = React.createRef();\r\n  }\r\n  async componentDidMount() {\r\n    if (localStorage.getItem(\"saveUsername\")) {\r\n      if (localStorage.getItem(\"username\")) {\r\n        this.setState({\r\n          saveUsername: true,\r\n          username: localStorage.getItem(\"username\"),\r\n        });\r\n      } else {\r\n        localStorage.setItem(\"saveUsername\", \"\");\r\n      }\r\n    } else {\r\n      localStorage.setItem(\"username\", \"\");\r\n    }\r\n  }\r\n  switch() {\r\n    this.setState({ register: !this.state.register });\r\n  }\r\n  handleUsernameChange(event) {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n  handlePasswordChange(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n  handleSaveUsername(event) {\r\n    const target = event.target;\r\n    const value =\r\n      target.name === \"saveUsername\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    if (this.state.saveUsername) {\r\n      localStorage.setItem(\"saveUsername\", \"true\");\r\n      localStorage.setItem(\"username\", this.state.username);\r\n    } else {\r\n      localStorage.setItem(\"saveUsername\", \"\");\r\n      localStorage.setItem(\"username\", \"\");\r\n    }\r\n  }\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.state.register) {\r\n      this.props.register(this.state.username, this.state.password);\r\n    } else {\r\n      this.props.login(this.state.username, this.state.password);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <div className=\"login-container\">\r\n          <h1 className=\"title\">\r\n            {this.state.register ? \"Register\" : \"Login\"}\r\n          </h1>\r\n          <form className=\"form\" onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                required\r\n                label=\"Username\"\r\n                value={this.state.username}\r\n                onChange={this.handleUsernameChange}\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                required\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={this.handlePasswordChange}\r\n                // autoComplete=\"current-password\"\r\n              />\r\n            </div>\r\n            <div className=\"form-bottom\">\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                // color=\"#1db4fa\"\r\n                className=\"submit-button\"\r\n              >\r\n                Log In\r\n              </Button>\r\n              {!this.state.register ? (\r\n                <label className=\"save-username\">\r\n                  Save Username\r\n                  <input\r\n                    name=\"saveUsername\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.saveUsername}\r\n                    onChange={this.handleSaveUsername}\r\n                  />\r\n                </label>\r\n              ) : null}\r\n            </div>\r\n          </form>\r\n          <div className=\"extra-links\" onClick={this.switch}>\r\n            {this.state.register\r\n              ? \"Login to existing account\"\r\n              : \"Register an account\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","export async function getRequest(root, params, notify) {\r\n  try {\r\n    let response = await fetch(getRequestUrl(root, params), {\r\n      credentials: \"omit\",\r\n    });\r\n    var [json, statusCode] = await response.json();\r\n  } catch (err) {\r\n    notify(`Bad Request: Try again`, \"error\");\r\n  }\r\n  if (statusCode !== 200) {\r\n    console.log(`server status code: ${statusCode}`);\r\n  }\r\n\r\n  if (json) {\r\n    if (\"invalid\" in json) {\r\n      notify(`Invalid Request: ${json[\"invalid\"]}`, \"error\");\r\n    } else if (\"error\" in json) {\r\n      notify(`Server Error: ${json[\"error\"]}`, \"error\");\r\n    } else {\r\n      return json;\r\n    }\r\n  } else {\r\n    notify(`Missing Server Data: Try Again`, \"error\");\r\n  }\r\n}\r\n\r\nfunction getRequestUrl(root, params) {\r\n  return (\r\n    `/${root}?` +\r\n    Object.keys(params)\r\n      .map((key) => `${key}=${params[key]}`)\r\n      .join(\"&\")\r\n  );\r\n}\r\n\r\nexport function getMonsterSrc(monster) {\r\n  return `/images/${monster.id}`;\r\n}\r\n\r\nexport default { getRequest, getMonsterSrc };\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\n\r\nimport { getMonsterSrc } from \"./util\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { codes: \"\", clipboardCodes: \"\", copySuccess: null };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClipBoardChange = this.handleClipBoardChange.bind(this);\r\n    this.copyCodes = this.copyCodes.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ codes: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.submitCodes(this.state.codes);\r\n  }\r\n  handleClipBoardChange(event) {\r\n    this.setState({ clipboardCodes: event.target.value });\r\n  }\r\n  copyCodes(event) {\r\n    this.codesRef.select();\r\n    document.execCommand(\"copy\");\r\n    event.target.focus();\r\n    this.props.notify(\"Copied!\", \"normal\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"home-left\">\r\n          <div className=\"codes-form\">\r\n            <h1 className=\"user-codes-title\">Your Codes</h1>\r\n            <textarea\r\n              className=\"user-codes\"\r\n              ref={(codes) => (this.codesRef = codes)}\r\n              value={this.props.monsters\r\n                .map((monster) => monster.code)\r\n                .join(\"\\n\")}\r\n              onChange={this.handleClipBoardChange}\r\n              readOnly\r\n            ></textarea>\r\n\r\n            <button className=\"copy-codes\" onClick={this.copyCodes}>\r\n              Copy Your Monster Codes to Clipboard\r\n            </button>\r\n            <form className=\"enter-codes-form\" onSubmit={this.handleSubmit}>\r\n              <label className=\"enter-codes\">Enter Monster Codes:</label>\r\n              <input\r\n                className=\"enter-codes-input\"\r\n                type=\"text\"\r\n                value={this.state.codes}\r\n                onChange={this.handleChange}\r\n              />\r\n              <button className=\"submit-codes\" type=\"submit\">\r\n                Submit Codes\r\n              </button>\r\n            </form>\r\n\r\n            <div className=\"codes-log\">\r\n              <div className=\"codes-log-title\">Code Log:</div>\r\n              <textarea\r\n                readOnly\r\n                className=\"codes-log-text\"\r\n                value={\r\n                  this.props.codesLog && this.props.codesLog.length > 0\r\n                    ? this.props.codesLog.join(\"\\n\")\r\n                    : \"Submit monster code(s) separated by spaces above!\"\r\n                }\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"home-right\">\r\n          {this.props.dailyMonster ? (\r\n            <div className=\"daily-monster\">\r\n              <h1 className=\"daily-monster-title\">Daily Monster</h1>\r\n              <img\r\n                className=\"daily-monster-image\"\r\n                src={getMonsterSrc(this.props.dailyMonster)}\r\n                alt={this.props.dailyMonster.name}\r\n              />\r\n              <div className=\"daily-monster-info\">\r\n                <p className=\"daily-monster-name\">\r\n                  {this.props.dailyMonster.name}\r\n                </p>\r\n                <p className=\"daily-monster-code\">\r\n                  Code: {this.props.dailyMonster.code}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p>Daily Monster Not Found</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Monster.css\";\r\nimport { getMonsterSrc } from \"./util\";\r\n\r\nclass Monster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hovering: false, top: 0, left: 0 };\r\n    this.onMouseEnter = this.onMouseEnter.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.onMouseLeave = this.onMouseLeave.bind(this);\r\n  }\r\n  onMouseEnter(event) {\r\n    this.setState({ hovering: true });\r\n  }\r\n  onMouseMove(event) {\r\n    this.setState({ top: event.clientY, left: event.clientX });\r\n  }\r\n  onMouseLeave(event) {\r\n    this.setState({ hovering: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        onMouseEnter={this.onMouseEnter}\r\n        onMouseMove={this.onMouseMove}\r\n        onMouseLeave={this.onMouseLeave}\r\n        onClick={this.props.onClick}\r\n        className=\"monster\"\r\n      >\r\n        {this.props.monster ? (\r\n          <div>\r\n            <img\r\n              className=\"monster-image\"\r\n              src={getMonsterSrc(this.props.monster)}\r\n              alt={this.props.monster.name}\r\n            />\r\n            <div\r\n              style={{ top: this.state.top, left: this.state.left }}\r\n              className={this.state.hovering ? \"monster-menu\" : \"hidden\"}\r\n            >\r\n              <div className=\"info\">\r\n                <p className=\"overlay-name\">{this.props.monster.name}</p>\r\n                <p className=\"monster-code\">Code: {this.props.monster.code}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Monster;\r\n","import React from \"react\";\r\nimport \"./Monsters.css\";\r\nimport Monster from \"./Monster\";\r\n\r\nclass Monsters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuStatus: \"\",\r\n    };\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n  }\r\n  openMenu() {\r\n    this.setState({ menuStatus: \"show-menu\" });\r\n  }\r\n  closeMenu() {\r\n    this.setState({ menuStatus: \"\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Monsters\">\r\n        <div id=\"menu\" className={this.state.menuStatus}>\r\n          {this.props.monsters && (\r\n            <div className=\"monsters-collected\">\r\n              Monsters Collected: {this.props.monsters.length}\r\n            </div>\r\n          )}\r\n          <button className=\"menu-button\" onClick={this.openMenu}>\r\n            Monsters\r\n          </button>\r\n          <button className=\"close-menu\" onClick={this.closeMenu}>\r\n            Close\r\n          </button>\r\n          <div className=\"menu-container\">\r\n            <div className=\"monsters-container\">\r\n              {this.props.monsters\r\n                ? this.props.monsters.map((monster) => {\r\n                    return (\r\n                      <div key={monster.id}>\r\n                        <Monster\r\n                          onClick={() => this.props.openMonsterOverlay(monster)}\r\n                          monster={monster}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Monsters;\r\n","import React from \"react\";\r\nimport \"./MonsterOverlay.css\";\r\nimport { getMonsterSrc } from \"./util\";\r\n\r\nclass MonsterOverlay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={this.props.monster ? { display: \"block\" } : { display: \"none\" }}\r\n        className=\"monster-overlay\"\r\n      >\r\n        <div className=\"overlay-container\">\r\n          <button\r\n            className=\"overlay-close-button\"\r\n            onClick={this.props.closeMonsterOverlay}\r\n          >\r\n            Close\r\n          </button>\r\n          {this.props.monster ? (\r\n            <div>\r\n              <div className=\"monster-viewer\">\r\n                <img\r\n                  className=\"overlay-image\"\r\n                  src={getMonsterSrc(this.props.monster)}\r\n                  alt={this.props.monster.name}\r\n                />\r\n              </div>\r\n              <div className=\"overlay-info\">\r\n                <div className=\"overlay-name\">{this.props.monster.name}</div>\r\n                <div className=\"overlay-code\">\r\n                  Code: {this.props.monster.code}\r\n                </div>\r\n              </div>{\" \"}\r\n            </div>\r\n          ) : (\r\n            <p>Monster Not Found</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MonsterOverlay;\r\n","/*\r\n\r\nADD EMAIL, INVITE LINKS\r\n*/\r\n\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport Login from \"./Login\";\r\nimport Home from \"./Home\";\r\nimport Monsters from \"./Monsters\";\r\n\r\nimport MonsterOverlay from \"./MonsterOverlay\";\r\n\r\nimport { getRequest } from \"./util\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n      userId: null,\r\n      monsters: [],\r\n      created: null,\r\n      username: null,\r\n      dailyMonster: null,\r\n\r\n      codesLog: [],\r\n      selectedMonsters: [],\r\n      loading: false,\r\n      notifications: [],\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.register = this.register.bind(this);\r\n    this.setUserInfo = this.setUserInfo.bind(this);\r\n    this.startLoading = this.startLoading.bind(this);\r\n    this.stopLoading = this.stopLoading.bind(this);\r\n\r\n    this.logout = this.logout.bind(this);\r\n    this.notify = this.notify.bind(this);\r\n    this.openMonsterOverlay = this.openMonsterOverlay.bind(this);\r\n    this.closeMonsterOverlay = this.closeMonsterOverlay.bind(this);\r\n\r\n    this.submitCodes = this.submitCodes.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    // temporary login stuff\r\n    this.timer = setInterval(() => {\r\n      if (this.state.notifications) {\r\n        for (let i = this.state.notifications.length - 1; i >= 0; i--) {\r\n          this.state.notifications[i].time--;\r\n          if (this.state.notifications[i].time < 0) {\r\n            this.state.notifications.splice(i, 1);\r\n          }\r\n        }\r\n        this.setState({\r\n          notifications: this.state.notifications,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  async login(username, password) {\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.startLoading();\r\n    let json = await getRequest(\r\n      \"login\",\r\n      { username: username, password: password },\r\n      this.notify\r\n    );\r\n    if (json) {\r\n      this.setUserInfo(json);\r\n    }\r\n    this.stopLoading();\r\n  }\r\n  async register(username, password) {\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.startLoading();\r\n    let json = await getRequest(\r\n      \"register\",\r\n      { username: username, password: password },\r\n      this.notify\r\n    );\r\n    if (json) {\r\n      this.setUserInfo(json);\r\n    }\r\n    this.stopLoading();\r\n  }\r\n  setUserInfo(json) {\r\n    this.setState({\r\n      loggedIn: true,\r\n      userId: json.id,\r\n      username: json.username,\r\n      created: json.created,\r\n      monsters: json.monsters,\r\n      dailyMonster: json.dailyMonster,\r\n    });\r\n  }\r\n  async submitCodes(codes) {\r\n    if (!codes) {\r\n      return;\r\n    }\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.startLoading();\r\n    let json = await getRequest(\r\n      \"codes\",\r\n      { userId: this.state.userId, codes: codes },\r\n      this.notify\r\n    );\r\n    if (json) {\r\n      // add to the log the new monsters\r\n      this.setUserInfo(json.user);\r\n      this.state.selectedMonsters.push(...json.redeemed);\r\n      this.state.codesLog.push(...json.log);\r\n      this.setState({\r\n        selectedMonsters: this.state.selectedMonsters,\r\n        codesLog: this.state.codesLog,\r\n      });\r\n    }\r\n\r\n    this.stopLoading();\r\n  }\r\n  startLoading() {\r\n    this.setState({ loading: true });\r\n  }\r\n  stopLoading() {\r\n    this.setState({ loading: false });\r\n  }\r\n  logout() {\r\n    this.setState({\r\n      loggedIn: false,\r\n      userId: null,\r\n      username: null,\r\n      created: null,\r\n      monsters: [],\r\n      dailyMonster: null,\r\n      selectedMonsters: [],\r\n      codesLog: [],\r\n    });\r\n  }\r\n  openMonsterOverlay(monster) {\r\n    this.state.selectedMonsters.push(monster);\r\n    this.setState({\r\n      selectedMonsters: this.state.selectedMonsters,\r\n    });\r\n  }\r\n  closeMonsterOverlay() {\r\n    this.state.selectedMonsters.pop();\r\n    this.setState({ selectedMonsters: this.state.selectedMonsters });\r\n  }\r\n  notify(message, type, duration = 500) {\r\n    this.state.notifications.push({\r\n      message: message,\r\n      time: duration,\r\n      type: type,\r\n    });\r\n    this.setState({ notifications: this.state.notifications });\r\n    // console.log(`${message} ${type}`);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header\r\n          monster={this.state.monsters}\r\n          username={this.state.username}\r\n          loggedIn={this.state.loggedIn}\r\n          logout={this.logout}\r\n        />\r\n        {this.state.notifications ? (\r\n          <div className=\"notifications\">\r\n            <ul className=\"notifications-list\">\r\n              {this.state.notifications.map((notification, i) => (\r\n                <li className={\"notification \" + notification.type} key={i}>\r\n                  {notification.message}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : null}\r\n        {this.state.loading ? (\r\n          <div className=\"loading\">\r\n            <img\r\n              src={\"/images/loading.png\"}\r\n              className=\"loading-image\"\r\n              alt=\"loading\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {this.state.selectedMonsters &&\r\n        this.state.selectedMonsters.length > 0 ? (\r\n          <MonsterOverlay\r\n            monster={\r\n              this.state.selectedMonsters[\r\n                this.state.selectedMonsters.length - 1\r\n              ]\r\n            }\r\n            closeMonsterOverlay={this.closeMonsterOverlay}\r\n          />\r\n        ) : null}\r\n        {this.state.loggedIn ? (\r\n          <Monsters\r\n            monsters={this.state.monsters}\r\n            openMonsterOverlay={this.openMonsterOverlay}\r\n          />\r\n        ) : null}\r\n        {this.state.loggedIn ? (\r\n          <Home\r\n            username={this.state.username}\r\n            monsters={this.state.monsters}\r\n            created={this.state.created}\r\n            codesLog={this.state.codesLog}\r\n            submitCodes={this.submitCodes}\r\n            dailyMonster={this.state.dailyMonster}\r\n            notify={this.notify}\r\n          />\r\n        ) : (\r\n          <Login login={this.login} register={this.register} />\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}